=IF(E1=0, 0, IF(E1<1000000, TEXT(E1/1000, "0.##")&"k", TEXT(E1/1000000, "0.##")&"mm"))

=IF(raw!E1=0, 0, IF(raw!E1<1000000, ROUND(raw!E1/1000, 0)&"k", IF(MOD(raw!E1, 1000000) = 0, ROUND(raw!E1/1000000, 0)&"mm", TEXT(raw!E1/1000000, "0.##")&"mm")))

Unique Formats:
74.50 bid for 3264 Re 2022-1 (88577CAB7)
1mm Mayflower 2023-1 B (57839MAB4) offered at 103.50
5mm Kilimanjaro 2021-1 C (49407PAG5) - 99.10 bid / 100.10 offer
Blue Sky 2023-1 (XS2728630596) bid at 100.60
5mm Kilimanjaro 2021-1 C (49407PAG5) - 99.10 bid / 100.10 offer
Montoya 2022-2 (613752AB0) bid at 109.00
5mm Kilimanjaro 2021-1 C (49407PAG5) offered @ 100.10
87403TAD8 Tailwind Re 2021-1 A bid @ 97.65
87403TAD8 Tailwind Re 2021-1 A offer @ 97.65
Res Re 2020-2 CL3 76120AAB8 bid @ 99.00
Res Re 2020-2 CL3 76120AAB8 offered @ 99.00
5mm Kilimanjaro 2021-1 C (49407PAG5) - bid at 99.10 / offered at 100.10
5mm Kilimanjaro 2021-1 C (49407PAG5) - bid @ 99.10 / offered @ 100.10
5mm Kilimanjaro 2021-1 C (49407PAG5) - bid @ 99.10 / offer @ 100.10
5mm Kilimanjaro 2021-1 C (49407PAG5) offered at 100.10




import pandas as pd
import random
import openpyxl

# Function to remove a sheet if it exists
def remove_sheet_if_exists(workbook, sheet_name):
    if sheet_name in workbook.sheetnames:
        workbook.remove(workbook[sheet_name])

# Function to generate a sentence based on the data row
def generate_sentence(row):
    cusip = row[2]  # Column 'C'
    name = row[3]   # Column 'D'
    size = row[4]   # Column 'E'
    action = row[5] # Column 'F'
    price = row[6]  # Column 'G'

    if action.lower() == 'bid':
        other_action = 'offer'
        other_price = price + 2
    else:
        other_action = 'bid'
        other_price = price - 2

    formats = [
        f"{price} {action} for {size} {name} ({cusip})",
        f"{size} {name} ({cusip}) {action}ed at {price}",
        f"{size} {name} ({cusip}) - {price} {action} / {other_price} {other_action}",
        f"{name} ({cusip}) {action} at {price}",
        f"{name} ({cusip}) - {action} at {price} / {other_action}ed at {other_price}",
        f"{name} ({cusip}) - {action}ed @ {price} / {other_action} @ {other_price}",
        f"{name} ({cusip}) - {action} @ {price} / {other_action} @ {other_price}",
        f"{cusip} {name} {action}ed @ {price}",
        f"{cusip} {name} {other_action} @ {other_price}",
        f"{size} {name} ({cusip}) {action}ed at {price}"
    ]
    return random.choice(formats)

# Load the data from the Excel file without headers
df = pd.read_excel('TrainingData.xlsx', sheet_name='Sheet1', header=None)

# Apply the function to each row
df['GeneratedSentence'] = df.apply(generate_sentence, axis=1)

# File path for the Excel file
excel_file_path = 'TrainingData.xlsx'

# Open the workbook and remove the 'Sentences' sheet if it exists
workbook = openpyxl.load_workbook(excel_file_path)
remove_sheet_if_exists(workbook, 'Sentences')
workbook.save(excel_file_path)
workbook.close()

# Save the dataframe with generated sentences to a new sheet in the same Excel file
with pd.ExcelWriter(excel_file_path, engine='openpyxl', mode='a') as writer:
    df.to_excel(writer, sheet_name='Sentences', index=False)

print("Sentences generated and saved to Excel file.")







74.50 bid for 3264 Re 2022-1 (88577CAB7)
64.50 bid for Herbie 2021-1 A (42703VAE3)
1mm Mayflower 2023-1 B (57839MAB4) offered at 103.50
750k Gateway 2023-1 A (36779CAC0) offered @ **BH trades and we care to buy more**
5mm Kilimanjaro 2021-1 C (49407PAG5) - 99.10 bid / 100.10 offer
Blue Sky 2023-1 (XS2728630596) bid at 100.60
Bonanza 2022-1 A (09785EAJ0) bid at 90.00
Bonanza 2023-1 A (09785EAK7) bid at 100.00
Citrus 2023-1 B (177510AM6) bid at 102.50 
Hexagon 2023-1 A (428270AA0) bid at 101.00
Lightning 2023-1 A (532242AA2) bid at 106.60 
Merna 2022-2 A (59013MAF9) bid at 99.00 
Montoya 2022-2 (613752AB0) bid at 109.00
425k Mayflower 2023-1 (57839MAA6) - **BH trades** Axed to buy more...
5mm Kilimanjaro 2021-1 C (49407PAG5) - 99.10 bid / 100.10 offer
750k Gateway 2023-1 A (36779CAC0) offered @ 108.35
5mm Kilimanjaro 2021-1 C (49407PAG5) offered @ 100.10
425k Mayflower 2023-1 (57839MAA6) - 101.90 bid / 102.35 offer
425k Mayflower 2023-1 (57839MAA6) offered @ 102.35
Res Re 2020-2 CL3 76120AAB8 bid @ 99.00
Res Re 2020-2 CL4 76120AAC6 bid @ 98.50
Res Re 2021-2 CL3 76114NAF9 bid @ 96.75
Res Re 2020-2 CL4 76120AAC6 bid @ 98.50
Res Re 2021-2 CL3 76114NAF9 bid @ 96.75
Res Re 2021-1 CL12 76120AAB8 bid @ 99.00
250k SD RE 2021-1 A (78414BAC5) - **BH trades**
250k SD RE 2021-1 B (78414BAD3)- **BH trades**
49407PAJ9 Kilimanjaro Re III 2021-2 B-2 bid @ 96.5
613752AB0 Montoya Re 2022-2 A bid @ 109.5
869255AA7 Sussex Capital 2021-1 bid @ 99.4
87403TAD8 Tailwind Re 2021-1 A bid @ 97.65
888329AB5 Titania Re 2021-2 A bid @ 97.8
888329AC3 Titania Re 2023-1 A bid @ 108.6
250k SD RE 2021-1 A (78414BAC5) - 98.60 bid / 99.10 offer
250k SD RE 2021-1 B (78414BAD3)- 99.10 bid / 99.60 offer
500k Hypatia Re 2023-1 A (44914CAC0)- 104.50 bid / 106.20 offer
250k SD RE 2021-1 A (78414BAC5) offered @ 99.10
250k SD RE 2021-1 B (78414BAD3) offered @ 99.60
500k Hypatia Re 2023-1 A (44914CAC0)- 104.50 bid / 106.20 offer
74.50 bid for 3264 Re 2022-1 (88577CAB7)
64.50 bid for Herbie 2021-1 A (42703VAE3)
1mm Purple Re 2023-1 A (74639NAA1) - 102.35 bid / 103.10 offer
5mm Merna 2022-1 (59013MAE2) **BH trades and axed for more**
2.5mm Ursa 2023-1 AA (90323WAP5) offered @ **Bh trades**
2.5mm Ursa 2023-1 D (90323WAQ3) offered @ **BH trades**
2.5mm Ursa 2023-1 AA (90323WAP5) offered @ 100.60
2.5mm Ursa 2023-1 D (90323WAQ3) offered @ 100.85
Looking to buy Galileo 2023-1 As & Bs at 100.65. Please let us know if you care to offer.





